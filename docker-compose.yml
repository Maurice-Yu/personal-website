services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    build: ./mysite
    command: python mysite/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
      
      migration:
        condition: service_completed_successfully
      
    restart: on-failure:10
  migration:
    build: ./mysite
    command: python mysite/manage.py migrate
    volumes:
      - .:/code
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
      
    restart: on-failure:10
  frontend:
    build: ./myanimelistfe
    ports:
      - 3000:3000
    stdin_open: true
    # volumes:
    #   - ./frontend:/usr/src/app
    #   - /usr/src/app/node_modules
    restart: always
    # networks:
    #   - react-express
    depends_on:
      - web